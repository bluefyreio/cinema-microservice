apiVersion: v1
kind: Service
metadata:
  name: movies-service
  labels:
    name: web
    app: movies-service
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 3000
      name: http
  selector:
    app: movies-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
   name: movies-service
spec:
   replicas: 1
   selector:
    matchLabels:
      app: movies-service
   template:
     metadata:
       labels:
         app: movies-service
         name: web         
     spec:
       containers:
       - name: movies-service
         image: gcr.io/customerdemo-001/cinema-movies-service:v1
         imagePullPolicy: Always
         command: ["/bin/sh"]
         args: ["-c", "dumb-init npm start"]
         imagePullPolicy: Always                 
#         args: ["-c", "tail -f /dev/null"]
         ports:
         - containerPort: 3000
         env:
         - name: NODE_ENV
           value: 
         - name: DB_SERVERS
           valueFrom:
            configMapKeyRef:
              name: dbservers
              key: dbservers
         - name: DB_USER
           valueFrom:
             secretKeyRef:
               name: dbuser
               key: dbuser
         - name: DB_PASS
           valueFrom:
             secretKeyRef:
               name: dbpass
               key: dbpass
         readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10               
         livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10